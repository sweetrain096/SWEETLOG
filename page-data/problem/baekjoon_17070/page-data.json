{"componentChunkName":"component---src-templates-post-template-js","path":"/problem/baekjoon_17070","webpackCompilationHash":"0478f4b3e93cd5fcb2ef","result":{"data":{"markdownRemark":{"id":"269aa44e-bb02-5e49-970f-46acc0918557","html":"<h2 id=\"baekjoon-17070-파이프-옮기기-1---c\"><a href=\"#baekjoon-17070-%ED%8C%8C%EC%9D%B4%ED%94%84-%EC%98%AE%EA%B8%B0%EA%B8%B0-1---c\" aria-label=\"baekjoon 17070 파이프 옮기기 1   c permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BAEKJOON] 17070 파이프 옮기기 1 - c</h2>\n<p><a href=\"https://www.acmicpc.net/problem/17070\">문제</a><br><br></p>\n<p>그래프의 크기 n과 그래프를 입력받는다.</p>\n<p>빈칸은 0, 벽은 1이며 파이프는 1*2(r, c) 형태이다. </p>\n<blockquote>\n<p>이 문제는 일반 탐색 문제와는 달리 이동 뿐 아니라 대각선의 회전을 생각해야한다. </p>\n</blockquote>\n<p>DFS의 백트레킹으로 python 구현을 했으나, 시간 조건 기준이 까다로워 C로 구현해 통과시켰다. bfs로 구현을 해야 시간초과를 벗어날 수 있을 것 같다.(<del>추후에 추가할 수 있기를…</del>)</p>\n<ul>\n<li>\n<p>c</p>\n<p>현재 들어온 벽과 빈칸의 정보를 Map으로, 방문 여부를 visited로 체크한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> cnt<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> Map<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> visited<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">is_wall</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> r <span class=\"token operator\">>=</span> n <span class=\"token operator\">||</span> c <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">>=</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Backtracking</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> hc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> tr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> tc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tvisited<span class=\"token punctuation\">[</span>hr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\n  <span class=\"token comment\">// (n, n)에 도달했을 때</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hr <span class=\"token operator\">==</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> hc <span class=\"token operator\">==</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tcnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n  \n  <span class=\"token comment\">// 모든 경우에 우측 대각선 아래로 이동 가능하다. 때문에 모든 경우에 체크.</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_wall</span><span class=\"token punctuation\">(</span>hr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> visited<span class=\"token punctuation\">[</span>hr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> Map<span class=\"token punctuation\">[</span>hr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Map<span class=\"token punctuation\">[</span>hr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> Map<span class=\"token punctuation\">[</span>hr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">Backtracking</span><span class=\"token punctuation\">(</span>hr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hr<span class=\"token punctuation\">,</span> hc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n  \n  <span class=\"token comment\">// row가 동일할 때. 즉, 가로로 위치해 있을 때 또는 대각선으로 위치해 있을 경우</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hr <span class=\"token operator\">==</span> tr <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>hr <span class=\"token operator\">==</span> tr <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> hc <span class=\"token operator\">==</span> tc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 가로의 이동만을 체크한다.</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_wall</span><span class=\"token punctuation\">(</span>hr<span class=\"token punctuation\">,</span> hc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> visited<span class=\"token punctuation\">[</span>hr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> Map<span class=\"token punctuation\">[</span>hr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">Backtracking</span><span class=\"token punctuation\">(</span>hr<span class=\"token punctuation\">,</span> hc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hr<span class=\"token punctuation\">,</span> hc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n  \n  <span class=\"token comment\">// col이 동일할 때. 즉, 세로로 위치해 있을 때 또는 대각선으로 위치해 있을 경우</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hc <span class=\"token operator\">==</span> tc <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>hr <span class=\"token operator\">==</span> tr <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> hc <span class=\"token operator\">==</span> tc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 세로의 이동만을 체크한다.</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_wall</span><span class=\"token punctuation\">(</span>hr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hc<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> visited<span class=\"token punctuation\">[</span>hr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> Map<span class=\"token punctuation\">[</span>hr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">Backtracking</span><span class=\"token punctuation\">(</span>hr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hc<span class=\"token punctuation\">,</span> hr<span class=\"token punctuation\">,</span> hc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tvisited<span class=\"token punctuation\">[</span>hr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Map<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tvisited<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tcnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">Backtracking</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><br><br><br></p>\n</li>\n<li>\n<p>python - 시간초과</p>\n<p>아래의 코드는 시간초과가 난 backtracking 코드이다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">is_wall</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> r<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span> <span class=\"token keyword\">or</span> r<span class=\"token operator\">>=</span> n <span class=\"token keyword\">or</span> c <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> c<span class=\"token operator\">>=</span> n<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">backtracking</span><span class=\"token punctuation\">(</span>hr<span class=\"token punctuation\">,</span> hc<span class=\"token punctuation\">,</span> tr<span class=\"token punctuation\">,</span> tc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">global</span> cnt\n  visit<span class=\"token punctuation\">[</span>hr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n  <span class=\"token comment\"># print(hr, hc, tr, tc)</span>\n  <span class=\"token comment\"># for i in range(n):</span>\n  <span class=\"token comment\">#     print(visit[i])</span>\n  <span class=\"token comment\"># print()</span>\n  <span class=\"token keyword\">if</span> hr <span class=\"token operator\">==</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">and</span> hc <span class=\"token operator\">==</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n      cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n  <span class=\"token comment\"># all</span>\n  <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_wall<span class=\"token punctuation\">(</span>hr<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hc<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> visit<span class=\"token punctuation\">[</span>hr<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> Map<span class=\"token punctuation\">[</span>hr<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> Map<span class=\"token punctuation\">[</span>hr<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token punctuation\">]</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> Map<span class=\"token punctuation\">[</span>hr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n          backtracking<span class=\"token punctuation\">(</span>hr<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hc<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hr<span class=\"token punctuation\">,</span> hc<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 가로</span>\n  <span class=\"token keyword\">if</span> hr <span class=\"token operator\">==</span> tr <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>hr <span class=\"token operator\">==</span> tr <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token keyword\">and</span> hc <span class=\"token operator\">==</span> tc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_wall<span class=\"token punctuation\">(</span>hr<span class=\"token punctuation\">,</span> hc<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> visit<span class=\"token punctuation\">[</span>hr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> Map<span class=\"token punctuation\">[</span>hr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n              backtracking<span class=\"token punctuation\">(</span>hr<span class=\"token punctuation\">,</span> hc<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hr<span class=\"token punctuation\">,</span> hc<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 세로</span>\n  <span class=\"token keyword\">if</span> hc <span class=\"token operator\">==</span> tc <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>hr <span class=\"token operator\">==</span> tr <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token keyword\">and</span> hc <span class=\"token operator\">==</span> tc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_wall<span class=\"token punctuation\">(</span>hr<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hc<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> visit<span class=\"token punctuation\">[</span>hr<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> Map<span class=\"token punctuation\">[</span>hr<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n              backtracking<span class=\"token punctuation\">(</span>hr<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hc<span class=\"token punctuation\">,</span> hr<span class=\"token punctuation\">,</span> hc<span class=\"token punctuation\">)</span>\n\n\n  visit<span class=\"token punctuation\">[</span>hr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>hc<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  Map<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nvisit <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\ncnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\nbacktracking<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>","fields":{"slug":"/problem/baekjoon_17070","tagSlugs":["/tag/알고리즘문제풀이/","/tag/알고리즘/","/tag/swea/"]},"frontmatter":{"date":"2019-09-10T14:10:15.169Z","description":"BAEKJOON] 17070 파이프 옮기기 1","tags":["알고리즘문제풀이","알고리즘","swea"],"title":"[BAEKJOON] 17070 파이프 옮기기 1"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/problem/baekjoon_17070"}}}