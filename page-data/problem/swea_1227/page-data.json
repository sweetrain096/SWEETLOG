{"componentChunkName":"component---src-templates-post-template-js","path":"/problem/swea_1227","webpackCompilationHash":"0478f4b3e93cd5fcb2ef","result":{"data":{"markdownRemark":{"id":"d3e4e17a-af72-513d-b9dc-3b84ae74ad5e","html":"<h2 id=\"swea-1227-sw-문제해결-기본-7일차---미로2\"><a href=\"#swea-1227-sw-%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0-%EA%B8%B0%EB%B3%B8-7%EC%9D%BC%EC%B0%A8---%EB%AF%B8%EB%A1%9C2\" aria-label=\"swea 1227 sw 문제해결 기본 7일차   미로2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[SWEA] 1227 s/w 문제해결 기본 7일차 - 미로2</h2>\n<p><a href=\"https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV141176AIwCFAYD\">문제</a><br><br></p>\n<p>단순 입력을 받고 bfs를 사용하여 갈 수 있는 길을 따라간다. </p>\n<p>현재 방문하고 있는 위치를 visit 체크해주는 것이 가장 중요하다.</p>\n<ul>\n<li>\n<p>python</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">deg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">is_wall</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> r<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span> <span class=\"token keyword\">or</span> r<span class=\"token operator\">>=</span> <span class=\"token number\">100</span> <span class=\"token keyword\">or</span> c<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span> <span class=\"token keyword\">or</span> c<span class=\"token operator\">>=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  Q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span>\n  cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  er<span class=\"token punctuation\">,</span> ec <span class=\"token operator\">=</span> end\n  <span class=\"token keyword\">while</span> Q<span class=\"token punctuation\">:</span>\n      now <span class=\"token operator\">=</span> Q<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      nr<span class=\"token punctuation\">,</span> nc <span class=\"token operator\">=</span> now\n      maze<span class=\"token punctuation\">[</span>nr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>nc<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9</span>\n\n      <span class=\"token keyword\">for</span> dr<span class=\"token punctuation\">,</span> dc <span class=\"token keyword\">in</span> deg<span class=\"token punctuation\">:</span>\n          tr<span class=\"token punctuation\">,</span> tc <span class=\"token operator\">=</span> nr <span class=\"token operator\">+</span> dr<span class=\"token punctuation\">,</span> nc <span class=\"token operator\">+</span> dc\n          <span class=\"token keyword\">if</span> tr <span class=\"token operator\">==</span> er <span class=\"token keyword\">and</span> tc <span class=\"token operator\">==</span> ec<span class=\"token punctuation\">:</span>\n              <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n          <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_wall<span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">,</span> tc<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> maze<span class=\"token punctuation\">[</span>tr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>tc<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n              Q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>tr<span class=\"token punctuation\">,</span> tc<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\n\n\n<span class=\"token keyword\">for</span> tc <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  case_num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  maze <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  start<span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n      cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n      <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n          tmp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">if</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n              start <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">]</span>\n          <span class=\"token keyword\">if</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n              end <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">]</span>\n          cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n      maze<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span>\n\n  Q <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"#</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>tc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>bfs<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><br><br><br><br></p>\n</li>\n<li>\n<p>c</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token keyword\">int</span> test_num<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> maze<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> sr<span class=\"token punctuation\">,</span> sc<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> er<span class=\"token punctuation\">,</span> ec<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> rp<span class=\"token punctuation\">,</span> wp<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> nr<span class=\"token punctuation\">,</span> nc<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> drs<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> dcs<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> dr<span class=\"token punctuation\">,</span> dc<span class=\"token punctuation\">,</span> tr<span class=\"token punctuation\">,</span> tc<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Queue</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>Queue<span class=\"token punctuation\">;</span>\nQueue Q<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">inQue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tQ<span class=\"token punctuation\">[</span>wp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span>\n\tQ<span class=\"token punctuation\">[</span>wp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n\twp<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> sc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> er<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">inQue</span><span class=\"token punctuation\">(</span>sr<span class=\"token punctuation\">,</span> sc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>rp <span class=\"token operator\">&lt;</span> wp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tnr <span class=\"token operator\">=</span> Q<span class=\"token punctuation\">[</span>rp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n\t\tnc <span class=\"token operator\">=</span> Q<span class=\"token punctuation\">[</span>rp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">;</span>\n\t\t\n\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tdr <span class=\"token operator\">=</span> drs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tdc <span class=\"token operator\">=</span> dcs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\ttr <span class=\"token operator\">=</span> nr <span class=\"token operator\">+</span> dr<span class=\"token punctuation\">;</span>\n\t\t\ttc <span class=\"token operator\">=</span> nc <span class=\"token operator\">+</span> dc<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr <span class=\"token operator\">==</span> er <span class=\"token operator\">&amp;&amp;</span> tc <span class=\"token operator\">==</span> ec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maze<span class=\"token punctuation\">[</span>tr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>tc<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">inQue</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">,</span> tc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tmaze<span class=\"token punctuation\">[</span>tr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>tc<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\n\t\trp<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> tc <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> tc <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> tc<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>test_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%1d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>maze<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maze<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\tsr <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span>\n\t\t\t\t\tsc <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maze<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\ter <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span>\n\t\t\t\t\tec <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\trp <span class=\"token operator\">=</span> wp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t\n\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#%d %d\\n\"</span><span class=\"token punctuation\">,</span> tc<span class=\"token punctuation\">,</span> <span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span>sr<span class=\"token punctuation\">,</span> sc<span class=\"token punctuation\">,</span> er<span class=\"token punctuation\">,</span> ec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>","fields":{"slug":"/problem/swea_1227","tagSlugs":["/tag/알고리즘문제풀이/","/tag/알고리즘/","/tag/swea/"]},"frontmatter":{"date":"2019-09-10T17:53:07.169Z","description":"[SWEA] 1227 s/w 문제해결 기본 7일차 - 미로2 - python, c","tags":["알고리즘문제풀이","알고리즘","swea"],"title":"[SWEA] 1233 s/w 문제해결 기본 7일차 - 미로2"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/problem/swea_1227"}}}